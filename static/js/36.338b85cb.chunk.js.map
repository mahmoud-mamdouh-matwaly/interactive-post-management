{"version":3,"file":"static/js/36.338b85cb.chunk.js","mappings":"uQAKMA,EAAa,SAAAC,GACjB,IAAAC,EAAqGD,EAA7FE,KAAAA,OAAI,IAAAD,EAAG,GAAEA,EAAEE,EAAkFH,EAAlFG,QAAOC,EAA2EJ,EAAzEK,WAAAA,OAAU,IAAAD,GAAQA,EAAAE,EAAuDN,EAArDO,KAAAA,OAAI,IAAAD,EAAG,UAASA,EAAAE,EAAqCR,EAAnCS,QAAAA,OAAO,IAAAD,GAAQA,EAAEE,EAAkBV,EAAlBU,KAASC,GAAIC,EAAAA,EAAAA,GAAKZ,EAAKa,GAE1G,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACT,KAAMA,EAAMU,UAAWR,EAASN,QAASA,EAASE,WAAYA,GAAgBM,GAAI,IAAAO,SAAA,EACxFC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAF,SAAEhB,IACNQ,KAGP,EAEA,KAAeW,EAAAA,EAAAA,MAAKtB,E,gHCVduB,EAAa,SAAHC,GAAwC,IAAlCC,EAASD,EAATC,UAAWC,EAAeF,EAAfE,gBAC/B,OACEX,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAACC,QAAQ,gBAAgBC,EAAE,KAAIV,SAAA,EAClCC,EAAAA,EAAAA,KAACpB,EAAAA,EAAU,CACTQ,KAAK,OACLG,KAAMc,GAAYL,EAAAA,EAAAA,KAACU,EAAAA,IAAmB,KAAMV,EAAAA,EAAAA,KAACW,EAAAA,IAAiB,IAC9D3B,QAASsB,EACTG,EAAE,IACFG,GAAG,cACHC,MAAM,WACNC,OAAQ,CACNF,GAAI,WACJC,MAAO,YAGXlB,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAACQ,MAAM,SAASP,QAAS,MAAOQ,IAAI,KAAKC,EAAE,OAAMlB,SAAA,EACpDC,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAAC3B,MAAMS,EAAAA,EAAAA,KAACmB,EAAAA,IAAM,IAAKC,KAAK,QAC/BpB,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAF,SAAC,mBAId,EAEA,WAAeG,EAAAA,EAAAA,MAAKC,E","sources":["components/button/index.jsx","layout/header/index.jsx"],"sourcesContent":["// import { Button } from 'antd';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Text } from '@chakra-ui/react';\n\nconst BaseButton = props => {\n  const { text = '', onClick, isDisabled = false, type = 'primary', loading = false, icon, ...rest } = props;\n\n  return (\n    <Button type={type} isLoading={loading} onClick={onClick} isDisabled={isDisabled} {...rest}>\n      <Text>{text}</Text>\n      {icon}\n    </Button>\n  );\n};\n\nexport default memo(BaseButton);\n\nBaseButton.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  type: PropTypes.string,\n  loading: PropTypes.bool,\n  icon: PropTypes.node,\n};\n","import { memo } from 'react';\nimport { Flex, Avatar, Text } from '@chakra-ui/react';\nimport { FiUser } from 'react-icons/fi';\nimport { AiOutlineMenuFold, AiOutlineMenuUnfold } from 'react-icons/ai';\nimport BaseButton from 'components/button';\n\nconst BaseHeader = ({ collapsed, handleCollapsed }) => {\n  return (\n    <Flex justify=\"space-between\" p=\"sm\">\n      <BaseButton\n        type=\"text\"\n        icon={collapsed ? <AiOutlineMenuUnfold /> : <AiOutlineMenuFold />}\n        onClick={handleCollapsed}\n        p=\"0\"\n        bg=\"transparent\"\n        color=\"blue.500\"\n        _hover={{\n          bg: 'blue.500',\n          color: 'white',\n        }}\n      />\n      <Flex align=\"center\" justify={'end'} gap=\"xs\" w=\"100%\">\n        <Avatar icon={<FiUser />} size=\"sm\" />\n        <Text>User Name</Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default memo(BaseHeader);\n"],"names":["BaseButton","props","_props$text","text","onClick","_props$isDisabled","isDisabled","_props$type","type","_props$loading","loading","icon","rest","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","isLoading","children","_jsx","Text","memo","BaseHeader","_ref","collapsed","handleCollapsed","Flex","justify","p","AiOutlineMenuUnfold","AiOutlineMenuFold","bg","color","_hover","align","gap","w","Avatar","FiUser","size"],"sourceRoot":""}