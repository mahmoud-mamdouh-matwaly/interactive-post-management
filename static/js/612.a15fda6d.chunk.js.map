{"version":3,"file":"static/js/612.a15fda6d.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/hooks/dist/chunk-EGV7XMQK.mjs","../node_modules/@chakra-ui/utils/dist/chunk-O3SWHQEE.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-IYF65QR3.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-TFWETJDV.mjs","layout/index.jsx","../node_modules/@chakra-ui/hooks/dist/chunk-CHB4ZXZG.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-NUQE4USX.mjs","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-IWVFML3N.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["// src/use-id.ts\nimport { useCallback, useId as useReactId, useMemo, useState } from \"react\";\nfunction useId(idProp, prefix) {\n  const id = useReactId();\n  return useMemo(\n    () => idProp || [prefix, id].filter(Boolean).join(\"-\"),\n    [idProp, prefix, id]\n  );\n}\nfunction useIds(idProp, ...prefixes) {\n  const id = useId(idProp);\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`);\n  }, [id, prefixes]);\n}\nfunction useOptionalPart(partId) {\n  const [id, setId] = useState(null);\n  const ref = useCallback(\n    (node) => {\n      setId(node ? partId : null);\n    },\n    [partId]\n  );\n  return { ref, id, isRendered: Boolean(id) };\n}\n\nexport {\n  useId,\n  useIds,\n  useOptionalPart\n};\n","// src/dom.ts\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction isHTMLElement(el) {\n  var _a;\n  if (!isElement(el)) {\n    return false;\n  }\n  const win = (_a = el.ownerDocument.defaultView) != null ? _a : window;\n  return el instanceof win.HTMLElement;\n}\nfunction getOwnerWindow(node) {\n  var _a, _b;\n  return isElement(node) ? (_b = (_a = getOwnerDocument(node)) == null ? void 0 : _a.defaultView) != null ? _b : window : window;\n}\nfunction getOwnerDocument(node) {\n  var _a;\n  return isElement(node) ? (_a = node.ownerDocument) != null ? _a : document : document;\n}\nfunction getEventWindow(event) {\n  var _a;\n  return (_a = event.view) != null ? _a : window;\n}\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nvar isBrowser = /* @__PURE__ */ canUseDOM();\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nvar ariaAttr = (condition) => condition ? true : void 0;\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction getActiveElement(node) {\n  const doc = getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent)\n    return false;\n  return parent === child || parent.contains(child);\n}\nfunction addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return () => {\n    target.removeEventListener(eventName, handler, options);\n  };\n}\nfunction normalizeEventKey(event) {\n  const { key, keyCode } = event;\n  const isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  const eventKey = isArrowKey ? `Arrow${key}` : key;\n  return eventKey;\n}\nfunction getRelatedTarget(event) {\n  var _a, _b;\n  const target = (_a = event.target) != null ? _a : event.currentTarget;\n  const activeElement = getActiveElement(target);\n  return (_b = event.relatedTarget) != null ? _b : activeElement;\n}\nfunction isRightClick(event) {\n  return event.button !== 0;\n}\n\nexport {\n  isElement,\n  isHTMLElement,\n  getOwnerWindow,\n  getOwnerDocument,\n  getEventWindow,\n  canUseDOM,\n  isBrowser,\n  dataAttr,\n  ariaAttr,\n  cx,\n  getActiveElement,\n  contains,\n  addDomEvent,\n  normalizeEventKey,\n  getRelatedTarget,\n  isRightClick\n};\n","// src/use-safe-layout-effect.ts\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport { useEffect, useLayoutEffect } from \"react\";\nvar useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport {\n  useSafeLayoutEffect\n};\n","import {\n  useSafeLayoutEffect\n} from \"./chunk-IYF65QR3.mjs\";\n\n// src/use-callback-ref.ts\nimport { useCallback, useRef } from \"react\";\nfunction useCallbackRef(fn, deps = []) {\n  const ref = useRef(fn);\n  useSafeLayoutEffect(() => {\n    ref.current = fn;\n  });\n  return useCallback((...args) => {\n    var _a;\n    return (_a = ref.current) == null ? void 0 : _a.call(ref, ...args);\n  }, deps);\n}\n\nexport {\n  useCallbackRef\n};\n","import { Suspense, lazy } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Grid, GridItem, useDisclosure, Spinner } from '@chakra-ui/react';\n\nconst BaseHeader = lazy(() => import('layout/header'));\nconst BaseSidebar = lazy(() => import('layout/sidebar'));\n\nconst BaseLayOut = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Grid\n      templateAreas={`\"nav header\"\n    \"nav main\"\n    \"nav footer\"`}\n      gridTemplateRows={'60px 1fr 30px'}\n      gridTemplateColumns={'220px 1fr'}\n      gap=\"1\"\n      fontWeight=\"bold\"\n    >\n      <GridItem pl=\"2\" bg=\"blue.950\" area={'nav'}>\n        <Suspense fallback={<Spinner />}>\n          <BaseSidebar isOpen={isOpen} onClose={onClose} />\n        </Suspense>\n      </GridItem>\n      <GridItem bg=\"white\" area={'header'}>\n        <Suspense fallback={<Spinner />}>\n          <BaseHeader setCollapsed={onOpen} collapsed={isOpen} />\n        </Suspense>\n      </GridItem>\n      <GridItem px=\"xs\" pt=\"2xl\" area={'main'} bg=\"gray.50\">\n        <Outlet />\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default BaseLayOut;\n","import {\n  useId\n} from \"./chunk-EGV7XMQK.mjs\";\nimport {\n  useControllableProp\n} from \"./chunk-NUQE4USX.mjs\";\nimport {\n  useCallbackRef\n} from \"./chunk-TFWETJDV.mjs\";\n\n// src/use-disclosure.ts\nimport { callAllHandlers } from \"@chakra-ui/utils\";\nimport { useCallback, useState } from \"react\";\nfunction useDisclosure(props = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const onOpenPropCallbackRef = useCallbackRef(onOpenProp);\n  const onClosePropCallbackRef = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState);\n  const id = useId(idProp, \"disclosure\");\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  const onToggle = useCallback(() => {\n    const action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: (props2 = {}) => ({\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: callAllHandlers(props2.onClick, onToggle)\n    }),\n    getDisclosureProps: (props2 = {}) => ({\n      ...props2,\n      hidden: !isOpen,\n      id\n    })\n  };\n}\n\nexport {\n  useDisclosure\n};\n","import {\n  useCallbackRef\n} from \"./chunk-TFWETJDV.mjs\";\n\n// src/use-controllable.ts\nimport { runIfFn } from \"@chakra-ui/utils\";\nimport { useCallback, useState } from \"react\";\nfunction useControllableProp(prop, state) {\n  const isControlled = prop !== void 0;\n  const value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\nfunction useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const shouldUpdateProp = useCallbackRef(shouldUpdate);\n  const [valueState, setValue] = useState(defaultValue);\n  const isControlled = valueProp !== void 0;\n  const value = isControlled ? valueProp : valueState;\n  const updateValue = useCallback(\n    (next) => {\n      const nextValue = runIfFn(next, value);\n      if (!shouldUpdateProp(value, nextValue)) {\n        return;\n      }\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp(nextValue);\n    },\n    [isControlled, onChangeProp, value, shouldUpdateProp]\n  );\n  return [value, updateValue];\n}\n\nexport {\n  useControllableProp,\n  useControllableState\n};\n","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","// src/grid-item.tsx\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGridItem.displayName = \"GridItem\";\n\nexport {\n  GridItem\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["useId","idProp","prefix","id","useReactId","useMemo","filter","Boolean","join","canUseDOM","window","document","createElement","useSafeLayoutEffect","useLayoutEffect","useEffect","useCallbackRef","fn","deps","arguments","length","undefined","ref","useRef","current","useCallback","_a2","_a","_len","args","Array","_key","call","apply","concat","BaseHeader","lazy","BaseSidebar","_useDisclosure","props","onCloseProp","onClose","onOpenProp","onOpen","isOpenProp","isOpen","onOpenPropCallbackRef","onClosePropCallbackRef","_useState","useState","defaultIsOpen","_useState2","_slicedToArray","isOpenState","setIsOpen","_useControllableProp","prop","state","isControlled","useControllableProp","_useControllableProp2","onToggle","getButtonProps","props2","_objectSpread","onClick","callAllHandlers","getDisclosureProps","hidden","useDisclosure","_jsxs","Grid","templateAreas","gridTemplateRows","gridTemplateColumns","gap","fontWeight","children","_jsx","GridItem","pl","bg","area","Suspense","fallback","Spinner","setCollapsed","collapsed","px","pt","Outlet","forwardRef","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","_objectWithoutProperties","_excluded","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","jsx","chakra","__css","displayName","Object","freeze","spanFn","span","mapper","value","isArray","map","item","isObject","keys","reduce","result","key","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","compact","gridArea","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","object","clone","assign"],"sourceRoot":""}